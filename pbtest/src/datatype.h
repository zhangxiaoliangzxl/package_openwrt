/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: datatype.proto */

#ifndef PROTOBUF_C_datatype_2eproto__INCLUDED
#define PROTOBUF_C_datatype_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

typedef struct _Student Student;
typedef struct _School  School;

/* --- enums --- */

typedef enum _Grade
{
    GRADE__PRIMARY = 0,
    GRADE__JUNIOR  = 1,
    GRADE__SENIOR  = 2,
    GRADE__COLLEGE = 3 PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GRADE)
} Grade;

/* --- messages --- */

struct _Student
{
    ProtobufCMessage base;
    char *           id;
    char *           name;
    int32_t          age;
};
#define STUDENT__INIT                                 \
    {                                                 \
        PROTOBUF_C_MESSAGE_INIT(&student__descriptor) \
        , NULL, NULL, 0                               \
    }

struct _School
{
    ProtobufCMessage   base;
    protobuf_c_boolean has_grade;
    Grade              grade;
    Student *          student;
};
#define SCHOOL__INIT                                 \
    {                                                \
        PROTOBUF_C_MESSAGE_INIT(&school__descriptor) \
        , 0, GRADE__SENIOR, NULL                     \
    }

/* Student methods */
void     student__init(Student *message);
size_t   student__get_packed_size(const Student *message);
size_t   student__pack(const Student *message, uint8_t *out);
size_t   student__pack_to_buffer(const Student *message, ProtobufCBuffer *buffer);
Student *student__unpack(ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void     student__free_unpacked(Student *message, ProtobufCAllocator *allocator);
/* School methods */
void    school__init(School *message);
size_t  school__get_packed_size(const School *message);
size_t  school__pack(const School *message, uint8_t *out);
size_t  school__pack_to_buffer(const School *message, ProtobufCBuffer *buffer);
School *school__unpack(ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void    school__free_unpacked(School *message, ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Student_Closure)(const Student *message, void *closure_data);
typedef void (*School_Closure)(const School *message, void *closure_data);

/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    grade__descriptor;
extern const ProtobufCMessageDescriptor student__descriptor;
extern const ProtobufCMessageDescriptor school__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_datatype_2eproto__INCLUDED */
